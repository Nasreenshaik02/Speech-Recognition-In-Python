•	Installation required:
•	 Python Speech Recognition module: 
o	pip install speech recognition
PyAudio: Use the following command for Linux users 
o	  sudo apt-get install python3-pyaudio
o	Windows users can install pyaudio by executing the following command in a terminal
o	pip install pyaudio 
o	Python pyttsx3 module:   pip install pyttsx3
                    Speech Input Using a Microphone and Translation of Speech to Text 

•	Allow Adjusting for Ambient Noise: 
Since the surrounding noise varies, we must allow the program a second or too to adjust the energy threshold of recording so it is adjusted according to the external noise level.    
                
•	Speech to text translation: 
This is done with the help of Google Speech Recognition. This requires an active internet connection to work. However, there are certain offline Recognition systems such as Pocket Sphinx, but have a very rigorous installation process that requires several dependencies. Google Speech Recognition. 

•	Translation of Speech to Text:
 First, we need to import the library and then initialize it using init() function. This function may take 2 arguments. 
 
•	Init (driver Name string, debug bool) 
•	driver name: [Name of available driver] sapi5 on Windows | nsss on MacOS  
•	debug: to enable or disable debug output  
                 After initialization, we will make the program speak the text using say() function. 
                 This method may also take 2 arguments.                     
          Text: anything you want to hear
 

python:
import speech_recognition as sr
# Initialize recognizer class (for recognizing the speech)
recognizer = sr.Recognizer()
# Function to capture and recognize speech
def recognize_speech_from_mic(recognizer, microphone):
# Adjust for ambient noise
  with microphone as source:
print("Adjusting for ambient noise, please wait...")
  recognizer.adjust_for_ambient_noise(source)
while True:
# Capture audio
with microphone as source:
 audio_data = recognizer.listen(source)
try:
 # Recognize (convert from speech to text)
text = recognizer.recognize_google(audio_data)
 print(text)
except sr.UnknownValueError:
 print("Sorry, I could not understand the audio.")
except sr.RequestError:
 print("Sorry, my speech service is down.")
# Create a microphone instance
mic = sr.Microphone()
# Start recognizing speech
recognize_speech_from_mic(recognizer, mic)        
                   
 
                      
 


